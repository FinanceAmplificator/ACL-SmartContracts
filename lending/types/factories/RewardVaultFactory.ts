/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { RewardVault } from "../RewardVault";

export class RewardVaultFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(_rewardManager: string, overrides?: Overrides): Promise<RewardVault> {
    return super.deploy(
      _rewardManager,
      overrides || {}
    ) as Promise<RewardVault>;
  }
  getDeployTransaction(
    _rewardManager: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(_rewardManager, overrides || {});
  }
  attach(address: string): RewardVault {
    return super.attach(address) as RewardVault;
  }
  connect(signer: Signer): RewardVaultFactory {
    return super.connect(signer) as RewardVaultFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RewardVault {
    return new Contract(address, _abi, signerOrProvider) as RewardVault;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_rewardManager",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    payable: true,
    stateMutability: "payable",
    type: "fallback",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "emergencyWithdraw",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "rewardManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "bool",
        name: "_pause",
        type: "bool",
      },
    ],
    name: "setPaused",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "_rewardManager",
        type: "address",
      },
    ],
    name: "setRewardManager",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610a6f380380610a6f8339818101604052602081101561003357600080fd5b50516100466001600160e01b036100bd16565b600080546001600160a01b0319166001600160a01b03928316178082556040519216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a360018055600280546001600160a01b0390921661010002610100600160a81b03199092169190911790556100c1565b3390565b61099f806100d06000396000f3fe6080604052600436106100865760003560e01c80638da5cb5b116100595780638da5cb5b1461012d5780638f32d59b14610142578063d9caed121461016b578063e63ea408146101ae578063f2fde38b146101f157610086565b80630f4ef8a614610088578063153ee554146100b957806316c38b3c146100ec578063715018a614610118575b005b34801561009457600080fd5b5061009d610224565b604080516001600160a01b039092168252519081900360200190f35b3480156100c557600080fd5b50610086600480360360208110156100dc57600080fd5b50356001600160a01b0316610238565b3480156100f857600080fd5b506100866004803603602081101561010f57600080fd5b503515156102a7565b34801561012457600080fd5b50610086610301565b34801561013957600080fd5b5061009d610392565b34801561014e57600080fd5b506101576103a1565b604080519115158252519081900360200190f35b34801561017757600080fd5b506100866004803603606081101561018e57600080fd5b506001600160a01b038135811691602081013590911690604001356103c5565b3480156101ba57600080fd5b50610086600480360360608110156101d157600080fd5b506001600160a01b03813581169160208101359091169060400135610439565b3480156101fd57600080fd5b506100866004803603602081101561021457600080fd5b50356001600160a01b0316610480565b60025461010090046001600160a01b031681565b6102406103a1565b61027f576040805162461bcd60e51b81526020600482018190526024820152600080516020610921833981519152604482015290519081900360640190fd5b600280546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b6102af6103a1565b6102ee576040805162461bcd60e51b81526020600482018190526024820152600080516020610921833981519152604482015290519081900360640190fd5b6002805460ff1916911515919091179055565b6103096103a1565b610348576040805162461bcd60e51b81526020600482018190526024820152600080516020610921833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b600080546001600160a01b03166103b66104d3565b6001600160a01b031614905090565b60025461010090046001600160a01b03163314610429576040805162461bcd60e51b815260206004820152601d60248201527f4d7573742063616c6c2066726f6d20726577617264206d616e61676572000000604482015290519081900360640190fd5b6104348383836104d7565b505050565b6104416103a1565b610429576040805162461bcd60e51b81526020600482018190526024820152600080516020610921833981519152604482015290519081900360640190fd5b6104886103a1565b6104c7576040805162461bcd60e51b81526020600482018190526024820152600080516020610921833981519152604482015290519081900360640190fd5b6104d081610601565b50565b3390565b6001805481019081905560025460ff161561052e576040805162461bcd60e51b8152602060048201526012602482015271135d5cdd081b9bdd081899481c185d5cd95960721b604482015290519081900360640190fd5b836001600160a01b03166105406106a1565b6001600160a01b0316141561058b576040516001600160a01b0384169083156108fc029084906000818181858888f19350505050158015610585573d6000803e3d6000fd5b506105a5565b6105a56001600160a01b038516848463ffffffff6106b916565b60015481146105fb576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b50505050565b6001600160a01b0381166106465760405162461bcd60e51b81526004018080602001828103825260268152602001806108fb6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee90565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610434908490610718826001600160a01b03166108be565b610769576040805162461bcd60e51b815260206004820152601f60248201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400604482015290519081900360640190fd5b60006060836001600160a01b0316836040518082805190602001908083835b602083106107a75780518252601f199092019160209182019101610788565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610809576040519150601f19603f3d011682016040523d82523d6000602084013e61080e565b606091505b509150915081610865576040805162461bcd60e51b815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604482015290519081900360640190fd5b8051156105fb5780806020019051602081101561088157600080fd5b50516105fb5760405162461bcd60e51b815260040180806020018281038252602a815260200180610941602a913960400191505060405180910390fd5b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081158015906108f25750808214155b94935050505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a265627a7a7231582034def5db8a0a7c4b4983f2b29dbcf0eef692735ea65b08ace535284ef8683d7d64736f6c63430005110032";
