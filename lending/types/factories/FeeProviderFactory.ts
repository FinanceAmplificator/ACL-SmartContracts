/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { FeeProvider } from "../FeeProvider";

export class FeeProviderFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<FeeProvider> {
    return super.deploy(overrides || {}) as Promise<FeeProvider>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): FeeProvider {
    return super.attach(address) as FeeProvider;
  }
  connect(signer: Signer): FeeProviderFactory {
    return super.connect(signer) as FeeProviderFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FeeProvider {
    return new Contract(address, _abi, signerOrProvider) as FeeProvider;
  }
}

const _abi = [
  {
    constant: true,
    inputs: [],
    name: "FEE_PROVIDER_REVISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "calculateLoanOriginationFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "_originationFee",
        type: "uint256",
      },
    ],
    name: "calculateRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "getFeeRates",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "getFlashLoanFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "getRewardRates",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "_addressesProvider",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000805534801561001457600080fd5b50610663806100246000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063c4d66de81161005b578063c4d66de8146100df578063d3ea435014610107578063d6e7a55e14610124578063fd90c2be146101455761007d565b80630c056a3114610082578063249bbe91146100a8578063b0d73d4e146100d7575b600080fd5b61008a61014d565b60408051938452602084019290925282820152519081900360600190f35b6100c5600480360360208110156100be57600080fd5b5035610198565b60408051918252519081900360200190f35b6100c56101b5565b610105600480360360208110156100f557600080fd5b50356001600160a01b03166101ba565b005b61008a6004803603602081101561011d57600080fd5b5035610284565b61012c610353565b6040805192835260208301919091528051918290030190f35b6100c561035d565b600080600080670de0b6b3a764000090506101856037546101796036548461036390919063ffffffff16565b9063ffffffff61036316565b6036546037549095509350915050909192565b60006101af603454836103ac90919063ffffffff16565b92915050565b600181565b60006101c46103e8565b60015490915060ff16806101db57506101db6103ed565b806101e7575060005481115b6102225760405162461bcd60e51b815260040180806020018281038252602e815260200180610601602e913960400191505060405180910390fd5b60015460ff16158015610241576001805460ff19168117905560008290555b6509184e72a000603455660221b262dd80006035556709b6e64a8ec600006036556702c68af0bb140000603755801561027f576001805460ff191690555b505050565b6000806000670de0b6b3a76400006102a96037546036546103f390919063ffffffff16565b11156102fc576040805162461bcd60e51b815260206004820152601b60248201527f496e76616c6964204665657320636f6e66696775726174696f6e730000000000604482015290519081900360640190fd5b6000610313603654866103ac90919063ffffffff16565b9050600061032c603754876103ac90919063ffffffff16565b90508181610344816101798a8563ffffffff61036316565b94509450945050509193909250565b6034546035549091565b60355490565b60006103a583836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061044d565b9392505050565b60006103a5670de0b6b3a76400006103dc6103cd868663ffffffff6104e416565b6706f05b59d3b20000906103f3565b9063ffffffff61053d16565b600190565b303b1590565b6000828201838110156103a5576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600081848411156104dc5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156104a1578181015183820152602001610489565b50505050905090810190601f1680156104ce5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000826104f3575060006101af565b8282028284828161050057fe5b04146103a55760405162461bcd60e51b81526004018080602001828103825260218152602001806105e06021913960400191505060405180910390fd5b60006103a583836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250600081836105c95760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156104a1578181015183820152602001610489565b5060008385816105d557fe5b049594505050505056fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564a265627a7a72315820b0f1a8e28f8bab4f34de8fab5910038ef728e424b18df9d42eda7292d22f11af64736f6c63430005110032";
