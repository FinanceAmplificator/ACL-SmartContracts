/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import { FeeProvider } from "./FeeProvider";

export class FeeProviderFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<FeeProvider> {
    return super.deploy(overrides || {}) as Promise<FeeProvider>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): FeeProvider {
    return super.attach(address) as FeeProvider;
  }
  connect(signer: Signer): FeeProviderFactory {
    return super.connect(signer) as FeeProviderFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FeeProvider {
    return new Contract(address, _abi, signerOrProvider) as FeeProvider;
  }
}

const _abi = [
  {
    constant: true,
    inputs: [],
    name: "FEE_PROVIDER_REVISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "_addressesProvider",
        type: "address"
      }
    ],
    name: "initialize",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256"
      }
    ],
    name: "calculateLoanOriginationFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "_originationFee",
        type: "uint256"
      }
    ],
    name: "calculateRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "getFeeRates",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "getFlashLoanFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "getRewardRates",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  }
];

const _bytecode =
  "0x60806040526000805534801561001457600080fd5b506108ad806100246000396000f3fe608060405234801561001057600080fd5b506004361061006d5760003560e01c80630c056a3114610072578063249bbe911461009e578063b0d73d4e146100e0578063c4d66de8146100fe578063d3ea435014610142578063d6e7a55e14610192578063fd90c2be146101b7575b600080fd5b61007a6101d5565b60405180848152602001838152602001828152602001935050505060405180910390f35b6100ca600480360360208110156100b457600080fd5b8101908080359060200190929190505050610224565b6040518082815260200191505060405180910390f35b6100e8610242565b6040518082815260200191505060405180910390f35b6101406004803603602081101561011457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610247565b005b61016e6004803603602081101561015857600080fd5b8101908080359060200190929190505050610370565b60405180848152602001838152602001828152602001935050505060405180910390f35b61019a610471565b604051808381526020018281526020019250505060405180910390f35b6101bf610482565b6040518082815260200191505060405180910390f35b600080600080670de0b6b3a7640000905061020f6037546102016036548461048c90919063ffffffff16565b61048c90919063ffffffff16565b90506036546037548293509350935050909192565b600061023b603454836104d690919063ffffffff16565b9050919050565b600181565b6000610251610531565b9050600160009054906101000a900460ff1680610272575061027161053a565b5b8061027e575060005481115b6102d3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061084b602e913960400191505060405180910390fd5b6000600160009054906101000a900460ff1615905080156103105760018060006101000a81548160ff021916908315150217905550816000819055505b6509184e72a000603481905550660221b262dd80006035819055506709b6e64a8ec600006036819055506702c68af0bb140000603781905550801561036b576000600160006101000a81548160ff0219169083151502179055505b505050565b6000806000670de0b6b3a764000061039560375460365461054b90919063ffffffff16565b1115610409576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f496e76616c6964204665657320636f6e66696775726174696f6e73000000000081525060200191505060405180910390fd5b6000610420603654866104d690919063ffffffff16565b90506000610439603754876104d690919063ffffffff16565b9050818161046283610454868b61048c90919063ffffffff16565b61048c90919063ffffffff16565b94509450945050509193909250565b600080603454603554915091509091565b6000603554905090565b60006104ce83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506105d3565b905092915050565b6000610529670de0b6b3a764000061051b6104fa858761069390919063ffffffff16565b6002670de0b6b3a76400008161050c57fe5b0461054b90919063ffffffff16565b61071990919063ffffffff16565b905092915050565b60006001905090565b600080303b90506000811491505090565b6000808284019050838110156105c9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6000838311158290610680576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561064557808201518184015260208101905061062a565b50505050905090810190601f1680156106725780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b6000808314156106a65760009050610713565b60008284029050828482816106b757fe5b041461070e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061082a6021913960400191505060405180910390fd5b809150505b92915050565b600061075b83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610763565b905092915050565b6000808311829061080f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156107d45780820151818401526020810190506107b9565b50505050905090810190601f1680156108015780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600083858161081b57fe5b04905080915050939250505056fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564a265627a7a72315820df73fa9f025d9e63cd0d303c90c76e3dd176562a18ff243396e1375bb853e8f964736f6c63430005100032";
